<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! src/main/resources/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011-2015 ForgeRock AS.
  !    
-->
<chapter xml:id='chap-msiis-7'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook
                     http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'
 xmlns:xinclude='http://www.w3.org/2001/XInclude'>

 <title>Installing the Microsoft IIS 7 Policy Agent</title>

 <indexterm>
  <primary>Microsoft IIS 7</primary>
 </indexterm>

 <para>
  This chapter covers installation of the policy agent for
  Microsoft Internet Information Services 7.
  This policy agent also works with Microsoft IIS 8.
 </para>
 
 <section xml:id="before-iis7-agent-install">
  <title>Before You Install</title>

  <indexterm>
   <primary>Microsoft IIS 7</primary>
   <secondary>before you install</secondary>
  </indexterm>

  <para>Make sure OpenAM is installed, running, that you can contact OpenAM
  from the system running the policy agent. Next, create a profile for your
  policy agent as described in the <citetitle>Administration Guide</citetitle>
  section on <link xlink:href="${serverDocBase}/admin-guide/#create-agent-profiles"
  xlink:show="new"><citetitle>Creating Agent
  Profiles</citetitle></link>. To protect resources with the agent also create
  at least one policy as described in the section on <link
  xlink:href="${serverDocBase}/admin-guide/#configure-authz-policy"
  xlink:show="new"><citetitle>Configuring
  Policies</citetitle></link>. Consider creating a simple policy, such as a
  policy that allows only authenticated users to access your resources, in order
  to test your policy agent after installation.</para>

  <para>You must install Microsoft IIS 7 before you install the policy agent,
  and make sure that IIS 7 allows anonymous authentication. Make sure that IIS
  7 listens on the URL used during the web policy agent installation, such as
  <literal>http://windows7.example.com:80/</literal>. Furthermore, you
  must reset IIS 7 after installing the policy agent.</para>

  <para>
   In addition, the Microsoft IIS 7 policy agent requires that
   IIS Application Development features be installed with IIS.
   Application Development is an optional component of the IIS web server.
   The component provides infrastructure for developing and hosting web applications.
  </para>

  <xinclude:include href="../shared/para-download-agent.xml" />
  
  <para>Unpack the file in the directory where you plan to install the web
  policy agent. The agent you install stores its configuration and logs
  under this directory.</para>
  
  <variablelist>
   <para>When you unpack the policy agent you download, you find the following
   directories under the <filename>web_agents\iis7_agent\</filename>
   directory.</para>
   <varlistentry>
    <term><filename>bin</filename></term>
    <listitem>
     <para>Contains the configuration creation script,
     <command>IIS7CreateConfig.vbs</command>; the agent administration and
     installation script, <command>IIS7Admin.vbs</command>; the certificate
     management tool <command>certutil.exe</command>; the password hashing tool
     <command>cryptit.exe</command>; additional .dll and support files.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>config</filename></term>
    <listitem>
     <para>Configuration templates used by the scripts during configuration
     and installation</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </section>
 
 <section xml:id="install-iis7-web-agent">
  <title>Installing IIS 7 Web Policy Agent</title>

  <indexterm>
   <primary>Microsoft IIS 7</primary>
   <secondary>installing</secondary>
  </indexterm>


  <para>Complete the following procedures to install the policy agent.</para>

  <note>
   <para>If the agent is in a different domain than the server, refer to
    the <citetitle>Administration Guide</citetitle> procedure, <link
     xlink:href="${serverDocBase}/admin-guide/#chap-cdsso"
     xlink:show="new"><citetitle>Configuring Cross-Domain
     Single Sign On</citetitle></link>.</para>
  </note>

  <xinclude:include href="../shared/procedure-create-web-agent-profile.xml">
   <xinclude:fallback><!-- Error: failed to include file --></xinclude:fallback>
  </xinclude:include>
  
  <procedure xml:id="create-iis7-agent-pwdfile">
   <title>To Create the Password File</title>

   <indexterm>
    <primary>Microsoft IIS 7</primary>
    <secondary>creating password file</secondary>
   </indexterm>

   <step>
    <para>Protect the password file you will create as appropriate.</para>
   </step>
   <step>
    <para>Create a text file containing only the password.</para>

    <screen>
C:\><userinput>notepad C:\Windows\Temp\pwd.txt</userinput>
    </screen>

   </step>
  </procedure>
  
  <procedure xml:id="configure-iis7-agent-install">
   <title>To Configure Policy Agent Installation</title>

   <indexterm>
    <primary>Microsoft IIS 7</primary>
    <secondary>installing</secondary>
    <tertiary>creating a configuration file</tertiary>
   </indexterm>

   <step>
    <para>Log on as a user with Administrator privileges.</para>
   </step>
   <step>
    <para>Change to the directory where you unpacked the agent download.</para>

    <screen>
C:\><userinput>cd web_agents\iis7_agent\bin</userinput>
    </screen>

   </step>
   <step>
    <para>Create a configuration file using the
    <command>IIS7CreateConfig.vbs</command> script.</para>
    <note>
     <para>The Web Site Identifier is the value of <literal>id</literal>,
     not the site name.</para>
    </note>

    <screen>
C:\web_agents\iis7_agent\bin><userinput>cscript IIS7CreateConfig.vbs config.txt</userinput>
<computeroutput>...
Enter the Agent Resource File Name [IIS7Resource.en] :

Enter the Agent URL (Example: http://agent.example.com:80) :</computeroutput>
<userinput>http://windows7.example.com:80</userinput>
<computeroutput>
Displaying the list of Web Sites and its corresponding Identifiers (id)

SITE "Default Web Site" (id:1,bindings:http/*:80:,state:Started)

Web Site Identifier :</computeroutput>
<userinput>1</userinput>
<computeroutput>...
Enter the URL where the OpenAM server is running...:</computeroutput>
<userinput>http://openam.example.com:8080/openam</userinput>

<computeroutput>Please enter the Agent Profile name :</computeroutput>
<userinput>IIS 7 Web Agent</userinput>

<computeroutput>Enter the Agent profile password file :</computeroutput>
<userinput>C:\Windows\Temp\pwd.txt</userinput>
<computeroutput>
-----------------------------------------------------
Agent Configuration file created : config.txt
-----------------------------------------------------</computeroutput>
    </screen>
   </step>
  </procedure>
  
  <procedure xml:id="install-agent-into-iis7">
   <title>To Install the Policy Agent into IIS 7</title>

   <indexterm>
    <primary>Microsoft IIS 7</primary>
    <secondary>installing</secondary>
    <tertiary>into IIS 7</tertiary>
   </indexterm>

   <step>
    <para>Log on as a user with Administrator privileges.</para>
   </step>
   <step>
    <para>Make sure OpenAM is running.</para>
   </step>
   <step>
    <para>Run <command>IIS7Admin.vbs</command> to install the agent.</para>

    <screen>
C:\web_agents\iis7_agent\bin><userinput>cscript IIS7Admin.vbs -config config.txt</userinput>
<computeroutput>...
Enter the Agent Resource File Name [IIS7Resource.en] :

Creating the Agent Config Directory
Creating the <?eval ${agentsBootstrapFile}?> and
 <?eval ${agentsConfigurationFile}?> File
Updating the Windows Product Registry
Installing policy web agent module in IIS (status: 0)
Adding policy web agent module to "Default Web Site" (status: 0)
Completed Configuring the IIS 7.0 Agent</computeroutput>
    </screen>

   </step>
   <step>
    <para>Make sure the authentication method for IIS 7 is set to
    anonymous.</para>
   </step>
   <step>
    <para>Restart IIS 7.</para>

    <screen><userinput>
net stop w3svc
net start w3svc</userinput>
    </screen>

    <note>
     <para>
      Do not use <command>IISReset.exe</command> as it is not supported in
      IIS 6.0, IIS 7.0, and IIS 7.5.
     </para>
    </note>

   </step>
   <step>
    <para>Take note of the configuration files and log locations.</para>
    <para>Each agent instance that you install on the system has its own
    configuration and logs directory. The agent protecting the Default Web
    Site (id: 1) shown in the examples above has configuration and logs located
    under the directory
    <filename>web_agents\iis7_agent\Identifier_1</filename>.
    The number in the path to the agent configuration reflects the IIS site ID,
    unlike the other agents for which the number in the path is a counter.
    The number in the path therefore remains the same when you uninstall and
    then reinstall an agent to protect the same site.</para>
    <variablelist>
     <varlistentry>
      <term><filename>config\<?eval ${agentsBootstrapFile}?></filename></term>
      <listitem>
       <para>Used to bootstrap the web policy agent, allowing the agent to
       connect to OpenAM and download its configuration</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><filename>config\<?eval ${agentsConfigurationFile}?></filename></term>
      <listitem>
       <para>Only used if you configured the web policy agent to use local
       configuration</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><filename>audit\</filename></term>
      <listitem>
       <para>Operational audit log directory, only used if remote logging
       to OpenAM is disabled</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><filename>debug\</filename></term>
      <listitem>
       <para>Debug directory where the <filename>amAgent</filename> debug file
       resides. Useful in troubleshooting policy agent issues.</para>
      </listitem>
     </varlistentry>
    </variablelist>
   </step>
   <step>
    <para>If your policy agent configuration is not in the top-level realm (/),
       then you must edit config\<?eval ${agentsBootstrapFile}?> to identify
       the sub-realm that has your policy agent configuration.
       Find com.sun.identity.agents.config.organization.name and change
       the / to the path to your policy agent profile. This allows the policy agent
       to properly identify itself to the OpenAM server. </para>
    </step>
    <step performance="optional">
     <para>If you have a policy configured, you can test your policy agent.
     For example, try to browse to a resource that your policy agent protects.
     You should be redirected to OpenAM to authenticate, for example as user
     <literal>demo</literal>, password <literal>changeit</literal>. After
     you authenticate, OpenAM then redirects you back to the resource you tried
     to access.</para>
    </step>
  </procedure>
 </section>
 
 <section xml:id="custom-iis7-agent-installation">
  <title>Custom IIS 7 Web Policy Agent Installation</title>

  <indexterm>
   <primary>Microsoft IIS 7</primary>
   <secondary>installing</secondary>
   <tertiary>custom</tertiary>
  </indexterm>

  <para>When protecting multiple IIS 7 websites on the same host, use different
  configuration files for each site.</para>
  
  <para>When preparing a scripted, silent installation, notice that the
  configuration file generated using <command>IIS7CreateConfig.vbs</command>
  is a text file containing all of the configuration information in clear text
  plus the encrypted password retrieved originally from the password
  file. Encrypt passwords using <command>cryptit.exe</command>.</para>
  
  <screen>
C:\web_agents\iis7_agent\bin><userinput>.\cryptit <replaceable>password</replaceable> <replaceable>encryption-key</replaceable></userinput>
  </screen>

 </section>

 <!-- OPENAM-1644: Document changes to IIS 7 PA support for Basic Auth and password replay -->
 <section xml:id="iis7-enable-basic-auth">
  <title>Enable IIS 7 Basic Authentication &amp; Password Replay Support</title>

  <indexterm>
   <primary>Microsoft IIS 7</primary>
   <secondary>basic authentication &amp; password relay support</secondary>
   <tertiary>enabling</tertiary>
  </indexterm>

  <itemizedlist>
   <para>The IIS 7 web policy agent now supports IIS 7 basic authentication and
   password replay. You must use the appropriate software versions.</para>

   <para>
    Given the proper configuration
    and with Active Directory as a user data store for OpenAM,
    the IIS 7 web policy agent can provide access to the IIS server variables.
    The instructions for configuring the capability follow in this section,
    though you should read the section in full,
    also paying attention to the required workarounds for Microsoft issues.
   </para>

   <para>
    When configured as described
    the policy agent requests IIS server variable values from OpenAM,
    which gets them from Active Directory.
    The policy agent then sets the values in HTTP headers
    so that they can be accessed by your application.
   </para>

   <para>
    The following IIS server variables all take the same value when set:
    <literal>REMOTE_USER</literal>,
    <literal>AUTH_USER</literal>,
    and <literal>LOGON_USER</literal>.
    The policy agent either sets all three, or does not set any of them.
   </para>

   <para>
    When you enable Logon and Impersonation in the console
    (<literal>com.sun.identity.agents.config.iis.logonuser=true</literal>
    in the policy agent configuration),
    the policy agent performs Windows logon
    and sets the user impersonation token in the IIS session context.
   </para>

   <para>
    When you enable Show Password in HTTP Header in the console
    (<literal>com.sun.identity.agents.config.iis.password.header=true</literal>
    in the policy agent configuration),
    the policy agent adds it in the <literal>USER_PASSWORD</literal> header.
   </para>

   <para>
    The policy agent does not modify any other IIS server variables
    related to the authenticated user's session.
   </para>

   <para>
    The policy agent works best with IIS running in Integrated, not Classic mode.
    In Classic mode, you cannot share sessions
    between the policy agent and another .NET application,
    so Logon and Impersonation are not operative.
    Furthermore IIS in Classic mode treats all modules as ISAPI extensions,
    and request processing is affected.
    It is therefore strongly recommended that you run IIS in Integrated mode.
   </para>

   <listitem>
    <para>For Microsoft Office integration, you must use Microsoft Office 2007
    SP2 or later.</para>
   </listitem>
   <listitem>
    <para>For Microsoft SharePoint integration, you must use Microsoft
    SharePoint Server 2007 SP2 or later.</para>
   </listitem>
  </itemizedlist>

  <variablelist>
   <para>You must also apply workarounds as described for the following
   Microsoft issues.</para>

   <varlistentry>
    <term>Microsoft Support Issue: 841215</term>
    <listitem>
     <para>Link: <link xlink:show="new"
     xlink:href="http://support.microsoft.com/kb/841215" /></para>
     <para>Description: Error message when you try to connect to a Windows
     SharePoint document library: "System error 5 has occurred"</para>
     <para>Summary: Enable Basic Authentication on the client computer.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>Microsoft Support Issue: 870853</term>
    <listitem>
     <para>Link: <link xlink:show="new"
     xlink:href="http://support.microsoft.com/kb/870853" /></para>
     <para>Description: Office 2003 and 2007 Office documents open read-only
     in Internet Explorer</para>
     <para>Summary: Add registry keys as described in Microsoft's support
     document.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>Microsoft Support Issue: 928692</term>
    <listitem>
     <para>Link: <link xlink:show="new"
     xlink:href="http://support.microsoft.com/kb/928692" /></para>
     <para>Description: Error message when you open a Web site by using Basic
     authentication in Expression Web on a computer that is running Windows
     Vista: "The folder name is not valid"</para>
     <para>Summary: Edit the registry as described in Microsoft's support
     document.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>Microsoft Support Issue: 932118</term>
    <listitem>
     <para>Link: <link xlink:show="new"
     xlink:href="http://support.microsoft.com/kb/932118" /></para>
     <para>Description: Persistent cookies are not shared between Internet
     Explorer and Office applications</para>
     <para>Summary: Add the web site the list of trusted sites.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>Microsoft Support Issue: 943280</term>
    <listitem>
     <para>Link: <link xlink:show="new"
     xlink:href="http://support.microsoft.com/kb/943280" /></para>
     <para>Description: Prompt for Credentials When Accessing FQDN Sites From a
     Windows Vista or Windows 7 Computer</para>
     <para>Summary: Edit the registry as described in Microsoft's support
     document.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>Microsoft Support Issue: 968851</term>
    <listitem>
     <para>Link: <link xlink:show="new"
     xlink:href="http://support.microsoft.com/kb/968851" /></para>
     <para>Description: SharePoint Server 2007 Cumulative Update Server
     Hotfix Package (MOSS server-package): April 30, 2009</para>
     <para>Summary: Apply the fix from Microsoft if you use SharePoint.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>Microsoft Support Issue: 2123563</term>
    <listitem>
     <para>Link: <link xlink:show="new"
     xlink:href="http://support.microsoft.com/kb/2123563" /></para>
     <para>Description: You cannot open Office file types directly from a
     server that supports only Basic authentication over a non-SSL
     connection</para>
     <para>Summary: Enable SSL encryption on the web server.</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <procedure xml:id="configure-ii7-basic-auth">
   <title>To Configure IIS 7 Basic Authentication &amp; Password Replay Support</title>

   <para>Follow these steps.</para>

   <step>
    <para>Generate and store an encryption key.</para>

    <substeps>
     <step>
      <para>Generate the key using
      <literal>com.sun.identity.common.DESGenKey</literal> using the .jars
      where you deployed OpenAM, as in the following example. The Java command below is
      broken out into multiple lines for display purposes only.</para>

      <screen>
$ <userinput>cd /path/to/tomcat/webapps/openam/WEB-INF/lib</userinput>
$ <userinput>java -cp ${forgerockUtilLibrary}:${coreLibrary}:\
   ${sharedLibrary} com.sun.identity.common.DESGenKey</userinput>
<computeroutput>Key ==> sxVoaDRAN0o=</computeroutput>
      </screen>

      <para>Windows users should use semi-colons (";"), instead of colons (":") in the commands.
      The Java command below is broken out into multiple lines for display purposes only.</para>

      <screen>
C:><userinput>cd path\to\tomcat\webapps\openam\WEB-INF\lib</userinput>
C:><userinput>java -cp ${forgerockUtilLibrary};${coreLibrary}; ^
    ${sharedLibrary} com.sun.identity.common.DESGenKey</userinput>
<computeroutput>Key ==> sxVoaDRAN0o=</computeroutput>
      </screen>

     </step>

     <step>
      <para>Store the key in the agent configuration on the property in the
      OpenAM console under Access Control &gt;
      <replaceable>realm-name</replaceable> &gt; Agents &gt; Web &gt;
      <replaceable>agent-name</replaceable> &gt; Advanced &gt; Microsoft IIS
      Server &gt; Replay Password Key (property name:
      <literal>com.sun.identity.agents.config.replaypasswd.key</literal>),
      and then Save your work.</para>
     </step>

     <step>
      <para>Store the key in the server configuration in the OpenAM console
      under Configuration &gt; Servers and Sites &gt;
      <replaceable>server-name</replaceable> &gt; Advanced &gt; Add... to add
      the property <literal>com.sun.am.replaypasswd.key</literal> with the
      key you generated as the value, and then Save your work.</para>
     </step>
    </substeps>
   </step>

   <step>
    <para>In the OpenAM console under Access Control &gt;
      <replaceable>realm-name</replaceable> &gt; Authentication &gt; All Core
      Settings... &gt; Authentication Post Processing Classes, add the class
      <literal>com.sun.identity.authentication.spi.ReplayPasswd</literal>,
      and then Save your work.</para>
   </step>

   <step>
    <para>If you require Windows logon, or you need to use basic authentication
    with SharePoint or OWA, then you must configure Active Directory as a
    user data store, and you must configure the IIS 7 policy agent profile
    User ID Parameter and User ID Parameter Type so that the policy agent
    requests OpenAM to provide the appropriate account information from
    Active Directory in its policy response.</para>

    <para>Skip this step if you do not use SharePoint or OWA and no Windows
    logon is required.</para>

    <para>Make sure OpenAM data store is configured to use Active Directory as
    the user data store.</para>

    <para>In the OpenAM console under Access Control &gt;
    <replaceable>realm-name</replaceable> &gt; Agents &gt; Web &gt;
    <replaceable>agent-name</replaceable> &gt; OpenAM Services &gt; Policy
    Client Service, set User ID Parameter and User ID Parameter Type, and then
    Save your work. For example if the real username for Windows domain logon
    in Active Directory is stored on the <literal>sAMAccountName</literal>
    attribute, then set the User ID Parameter to
    <literal>sAMAccountName</literal>, and the User ID Parameter Type to
    <literal>LDAP</literal>.</para>

    <para>Setting the User ID Parameter Type to <literal>LDAP</literal> causes
    the policy agent to request that OpenAM get the value of the User ID
    Parameter attribute from the data store, in this case Active Directory.
    Given that information, the policy agent can set the HTTP headers
    <literal>REMOTE_USER</literal>, <literal>AUTH_USER</literal>, or
    <literal>LOGON_USER</literal> and <literal>USER_PASSWORD</literal> with
    Active Directory attribute values suitable for Windows logon, setting the
    remote user, and so forth.</para>
   </step>

   <step>
    <para>
     To set the encrypted password in the <literal>AUTH_PASSWORD</literal> header,
     browse in the OpenAM console to Access Control >
     <replaceable>realm-name</replaceable> > Agents > Web >
     <replaceable>agent-name</replaceable> > Advanced > Microsoft IIS Server,
     select Show Password in HTTP Header, and then Save your work.
    </para>
   </step>

   <step>
    <para>
     To have the agent perform Windows logon (for user token impersonation),
     browse in the OpenAM console to Access Control >
     <replaceable>realm-name</replaceable> > Agents > Web >
     <replaceable>agent-name</replaceable> > Advanced > Microsoft IIS Server,
     select Logon and Impersonation, and then Save your work.
    </para>
   </step>

   <step>
    <para>In the OpenAM console under Access Control &gt;
    <replaceable>realm-name</replaceable> &gt; Agents &gt; Web &gt;
    <replaceable>agent-name</replaceable> &gt; Advanced &gt; Microsoft IIS
    Server, set Authentication Type to basic, and then Save your work.</para>
   </step>

   <step>
    <para>To use the agent with SharePoint or Microsoft Office, configure
    OpenAM to support the <literal>iPlanetDirectoryPro</literal> as a persistent
    cookie.</para>

    <para>In the OpenAM console under Access Control &gt;
      <replaceable>realm-name</replaceable> &gt; Authentication &gt; All Core
      Settings... &gt; Persistent Cookie Mode, select Enabled, and then Save
      your work.</para>
   </step>
  </procedure>
 </section>

 <section xml:id="uninstall-iis7-agent">
  <title>Remove IIS 7 Web Policy Agent Software</title>

  <indexterm>
   <primary>Microsoft IIS 7</primary>
   <secondary>removing</secondary>
  </indexterm>

  <para>To remove the web policy agent, log on as a user with Administrator
  privileges, run <command>cscript IIS7Admin.vbs -unconfig config.txt</command>,
  and then run <command>iisreset</command>.</para>
 </section>
</chapter>
